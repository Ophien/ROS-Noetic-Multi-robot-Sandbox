<!-- 
 * Copyright (c) 2020, Alysson Ribeiro da Silva
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. All advertising materials mentioning features or use of this software must
 *    display the following acknowledgement:
 *    This product includes software developed by Alysson Ribeiro da Silva.
 * 
 * 4. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 * 
 * 5. The source and the binary form, and any modifications made to them
 *    may not be used for the purpose of training or improving machine learning
 *    algorithms, including but not limited to artificial intelligence, natural
 *    language processing, or data mining. This condition applies to any derivatives,
 *    modifications, or updates based on the Software code. Any usage of the source
 *    or the binary form in an AI-training dataset is considered a breach of
 *    this License.
 * 
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDER "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<launch>
    <arg name="robot_id" default="0"/>
    <arg name="robot_count" default="3"/>

    <!-- GLOBAL -->
    <param name="robots" type="int" value="$(arg robot_count)"/>
    <param name="debug" type="bool" value="true" />

    <!-- load starting poses -->
    <rosparam command="load" file="$(find multirobotexploration)/config/gazebo_robots_start_pose.yaml" />

    <!-- load rendezvous plan -->
    <rosparam command="load" file="$(find multirobotexploration)/config/rendezvous_plan.yaml" />

    <!-- load the rendezvous footprint for each robot -->
    <rosparam command="load" file="$(find multirobotexploration)/config/rendezvous_footprint.yaml" />

    <group ns="robot_$(arg robot_id)">
        <!-- policies -->
        <param name="rate_alysson2024" type="int" value="1"/>
        <param name="alysson2024_queue_size" type="int" value="2" />

        <param name="rate_yamauchi1999" type="int" value="1"/>
        <param name="yamauchi1999_queue_size" type="int" value="2" />

        <param name="rate_randomizedsw" type="int" value="1"/>
        <param name="randomizedsw_queue_size" type="int" value="2" />

        <!-- frontier discovery configuration -->
        <param name="rate_frontierdiscovery" type="int" value="1"/> 
        <param name="frontierdiscovery_max_lidar_range" type="double" value="10.0"/>
        <param name="frontierdiscovery_queue_size" type="int" value="2" />

        <!-- lasernoiser configuration -->
        <param name="rate_lasernoiser" type="int" value="2"/>
        <param name="lasernoiser_queue_size" type="int" value="2" />

        <!-- lasertoworld configuration -->
        <param name="rate_lasertoworld" type="int" value="2"/>
        <param name="lasertoworld_queue_size" type="int" value="2" />

        <!-- gmapping pose configuration -->
        <param name="rate_gmappigpose" type="int" value="10"/>
        <param name="gmappigpose_queue_size" type="int" value="2" />

        <!-- mapfusion configuration -->
        <param name="rate_mapfusion" type="int" value="1"/>
        <param name="mapfusion_queue_size" type="int" value="2" />

        <!-- local dynamic view configuration -->
        <param name="rate_ldm" type="int" value="5"/>
        <param name="ldm_queue_size" type="int" value="1"/>
        <param name="ldm_local_view_size"  type="double" value="5.0"/>
        <param name="ldm_max_lidar_range" type="double" value="10.0"/>
        <param name="ldm_free_inflation_radius" type="double" value="5.0"/>
        <param name="ldm_ocu_inflation_radius" type="double" value="0.7"/>
        <param name="ldm_lidar_sources" type="int" value="4"/>

        <!-- cspace configuration -->
        <param name="rate_cspace" type="int" value="1"/>
        <param name="cspace_queue_size" type="int" value="2"/>
        <param name="cspace_max_lidar_range" type="double" value="10.0"/>
        <param name="cspace_free_inflation_radius" type="double" value="0.3"/>
        <param name="cspace_ocu_inflation_radius" type="double" value="0.7"/>
        <param name="cspace_lidar_sources" type="int" value="4"/>

        <!-- desai configuration -->
        <param name="rate_desai" type="int" value="5"/>
        <param name="desai_max_linear_vel" type="double" value="0.3"/>
        <param name="desai_max_angular_vel" type="double" value="0.6"/>
        <param name="desai_D" type="double" value="3.0"/>
        <param name="desai_queue_size" type="int" value="2" />

        <!-- pfield configuration -->
        <param name="rate_pfield" type="int" value="5"/>
        <param name="pfield_k_rep" type="double" value="1.5"/>
        <param name="pfield_k_att" type="double" value="1.0"/>
        <param name="pfield_r" type="double" value="20.0"/>
        <param name="pfield_queue_size" type="int" value="2" />

        <!-- subgoal configuration -->
        <param name="rate_subgoal" type="double" value="10.0" />
        <param name="subgoal_reach_threshold" type="double" value="0.3"/>
        <param name="subgoal_queue_size" type="int" value="2" />
        <param name="subgoal_delta_threshold" type="double" value="60.0"/>

        <!-- relative pose configuration -->
        <param name="rate_relativepose" type="int" value="5" />
        <param name="relativepose_queue_size" type="int" value="2" />

        <!-- average displacer configuration -->
        <param name="rate_avgd" type="double" value="5.0"/>
        <param name="avgd_queue_size" type="int" value="2"/>
        <param name="avgd_count" type="int" value="10"/>

        <!-- mre local planner for traffic control -->
        <param name="mrelp_min_displacement" type="double" value="0.005"/>
        <param name="mrelp_min_dist" type="double" value="2.0"/>
        
        <!-- mock network communication -->
        <param name="rate_mock_comm" type="double" value="5.0"/>
        <param name="mock_comm_dist" type="double" value="3.0"/>
        <param name="mock_comm_queue_size" type="int" value="2"/>

        <param name="id" type="int" value="$(arg robot_id)"/>

        <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_front">
            <remap from="cloud_in" to="/robot_$(arg robot_id)/camera/points"/>
            <remap from="scan" to="/robot_$(arg robot_id)/ultrasonic_front"/>
            <param name="target_frame" value="robot_$(arg robot_id)/stereo_camera"/>
            <rosparam>
                min_height: -0.1
                max_height: 0.5
                angle_min: -1.57 # -M_PI/2
                angle_max: 1.57 # M_PI/2
                angle_increment: 0.049 # M_PI/360.0
                scan_time: 0.01
                range_min: 0.0
                range_max: 5.0
                use_inf: true
                inf_epsilon: 1.0
                concurrency_level: 1
            </rosparam>
        </node>

        <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_back">
            <remap from="cloud_in" to="/robot_$(arg robot_id)/camera_back/points"/>
            <remap from="scan" to="/robot_$(arg robot_id)/ultrasonic"/>
            <param name="target_frame" value="robot_$(arg robot_id)/stereo_camera_back"/>
            <rosparam>
                min_height: -0.1
                max_height: 0.5
                angle_min: -1.57 # -M_PI/2
                angle_max: 1.57 # M_PI/2
                angle_increment: 0.049 # M_PI/360.0
                scan_time: 0.01
                range_min: 0.0
                range_max: 5.0
                use_inf: true
                inf_epsilon: 1.0
                concurrency_level: 1
            </rosparam>
        </node>

        <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_left">
            <remap from="cloud_in" to="/robot_$(arg robot_id)/camera_left/points"/>
            <remap from="scan" to="/robot_$(arg robot_id)/ultrasonic_left"/>
            <param name="target_frame" value="robot_$(arg robot_id)/stereo_camera_left"/>
            <rosparam>
                min_height: -0.1
                max_height: 0.5
                angle_min: -1.57 # -M_PI/2
                angle_max: 1.57 # M_PI/2
                angle_increment: 0.049 # M_PI/360.0
                scan_time: 0.01
                range_min: 0.0
                range_max: 5.0
                use_inf: true
                inf_epsilon: 1.0
                concurrency_level: 1
            </rosparam>
        </node>

        <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_right">
            <remap from="cloud_in" to="/robot_$(arg robot_id)/camera_right/points"/>
            <remap from="scan" to="/robot_$(arg robot_id)/ultrasonic_right"/>
            <param name="target_frame" value="robot_$(arg robot_id)/stereo_camera_right"/>
            <rosparam>
                min_height: -0.1
                max_height: 0.5
                angle_min: -1.57 # -M_PI/2
                angle_max: 1.57 # M_PI/2
                angle_increment: 0.049 # M_PI/360.0
                scan_time: 0.01
                range_min: 0.0
                range_max: 5.0
                use_inf: true
                inf_epsilon: 1.0
                concurrency_level: 1
            </rosparam>
        </node>

        <node name="node_lidar_to_occ_0" pkg="multirobotexploration" type="lasertoworld">
            <remap from="/robot_$(arg robot_id)/scan" to="/robot_$(arg robot_id)/ultrasonic"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_world" to="/robot_$(arg robot_id)/laser_to_world/lidar_world_0"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_occ" to="/robot_$(arg robot_id)/laser_to_world/lidar_occ_0"/>
            <param name="x" value="-0.25"/>
            <param name="y" value="0"/>
            <param name="z" value="0.15"/>
            <param name="r" value="0"/>
            <param name="p" value="0"/>
            <param name="y" value="3.14"/>
        </node>

        <node name="node_lidar_to_occ_1" pkg="multirobotexploration" type="lasertoworld">
            <remap from="/robot_$(arg robot_id)/scan" to="/robot_$(arg robot_id)/ultrasonic_front"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_world" to="/robot_$(arg robot_id)/laser_to_world/lidar_world_1"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_occ" to="/robot_$(arg robot_id)/laser_to_world/lidar_occ_1"/>
            <param name="x" value="0.25"/>
            <param name="y" value="0"/>
            <param name="z" value="0.15"/>
            <param name="r" value="0"/>
            <param name="p" value="0"/>
            <param name="y" value="0"/>
        </node>

        <node name="node_lidar_to_occ_2" pkg="multirobotexploration" type="lasertoworld">
            <remap from="/robot_$(arg robot_id)/scan" to="/robot_$(arg robot_id)/ultrasonic_left"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_world" to="/robot_$(arg robot_id)/laser_to_world/lidar_world_2"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_occ" to="/robot_$(arg robot_id)/laser_to_world/lidar_occ_2"/>
            <param name="x" value="0.25"/>
            <param name="y" value="0"/>
            <param name="z" value="0.15"/>
            <param name="r" value="0"/>
            <param name="p" value="0"/>
            <param name="y" value="1.57"/>
        </node>

        <node name="node_lidar_to_occ_3" pkg="multirobotexploration" type="lasertoworld">
            <remap from="/robot_$(arg robot_id)/scan" to="/robot_$(arg robot_id)/ultrasonic_right"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_world" to="/robot_$(arg robot_id)/laser_to_world/lidar_world_3"/>
            <remap from="/robot_$(arg robot_id)/laser_to_world/laser_occ" to="/robot_$(arg robot_id)/laser_to_world/lidar_occ_3"/>
            <param name="x" value="0.25"/>
            <param name="y" value="0"/>
            <param name="z" value="0.15"/>
            <param name="r" value="0"/>
            <param name="p" value="0"/>
            <param name="y" value="-1.57"/>
        </node>

        <node name="MOCK_COMM_MODEL" pkg="multirobotexploration" type="mockcommunicationmodel" output="screen"/>
        <node name="node_gmappingpose" pkg="multirobotexploration" type="gmappingpose"/>
        <node name="node_lasertoworld" pkg="multirobotexploration" type="lasertoworld"/>
        <node name="node_localdynamicmap" pkg="multirobotexploration" type="localdynamicmap" output="screen"/>    
        <node name="node_averagedisplacement" pkg="multirobotexploration" type="averagedisplacement" output="screen"/>
        <node name="node_frontierdiscovery" pkg="multirobotexploration" type="frontierdiscovery" output="screen"/>
        <node name="node_subgoalnav" pkg="multirobotexploration" type="subgoalnav" output="screen"/>
        <node name="node_relativeposes" pkg="multirobotexploration" type="relativeposeestimator" output="screen"/>
        <node name="node_fbmapfusion" pkg="multirobotexploration" type="fbmapfusionrelative" output="screen"/>
        <node name="node_cspace" pkg="multirobotexploration" type="cspace" output="screen">
            <remap from="/robot_$(arg robot_id)/map" to="/robot_$(arg robot_id)/fusion"/>
        </node>

        <!-- select policy -->
        <node name="node_policy" pkg="multirobotexploration" type="alysson2024" output="screen"/>
        <!-- <node name="node_policy" pkg="multirobotexploration" type="randomizedsocialwelfare" output="screen"/> -->
        <!-- <node name="node_policy" pkg="multirobotexploration" type="yamauchi1999" output="screen"/> -->

        <node name="node_costmapconverter" pkg="costmap_converter" type="standalone_converter" output="screen">
            <param name="costmap_topic" value="/robot_$(arg robot_id)/c_space_local"/>
            <param name="costmap_update_topic" value="/robot_$(arg robot_id)/c_space_local_updates"/>
            <param name="obstacles_topic" value="/robot_$(arg robot_id)/obstacle_array"/>
            <param name="polygon_marker_topic" value="/robot_$(arg robot_id)/polygon_marker"/>
            <param name="occupied_min_value" value="70"/>
            <param name="converter_plugin" value="costmap_converter::CostmapToPolygonsDBSMCCH"/>
            <param name="odom_topic" value="/robot_$(arg robot_id)/odom"/>
        </node>

        <node name="node_mrelocalplanner" pkg="multirobotexploration" type="mrelocalplanner" output="screen">
            <param name="odom_topic" value="/robot_$(arg robot_id)/odom"/>
            <param name="map_frame" value="robot_$(arg robot_id)/map"/>
            <param name="max_vel_x" value="0.5"/>
            <param name="max_vel_x_backwards" value="0.5"/>
            <param name="footprint_model" value="point"/>
            <param name="max_vel_theta" value="0.5"/>
            <param name="acc_lim_x" value="0.5"/>
            <param name="acc_lim_theta" value="0.5"/>
            <param name="min_turning_radius" value="0.0"/>
            <param name="free_goal_vel" value="True"/>
            <param name="wheelbase" value="0.55"/>
            <param name="enable_homotopy_class_planning" value="True"/>
            <param name="allow_init_with_backwards_motion" value="True"/>
            <param name="exact_arc_length" value="True"/>
            <param name="inflation_dist" value="0.0"/>
            <param name="min_obstacle_dist" value="0.1"/>
            <param name="weight_kinematics_forward_drive" value="1.0"/>
        </node>

    </group>

</launch>